@page "/client/details/contact/{ClientId:int}"

@using System.Globalization
@inject IClientContactService clientContactService
@inject NavigationManager navigationManager

@if (!string.IsNullOrEmpty(errorMessage))
{
	<MensageError Message="@errorMessage" />
	<button type="button" @onclick="Voltar" class="btn btn-info">Voltar</button>
}
else
{
	var clientContacts = ClientContactView.Data;
	if (clientContacts is not null)
	{
		var clientName = clientContacts
						.Where(w => w.ClientDto.Id == ClientId)
						.Select(s => s.ClientDto!.Name)
						.FirstOrDefault();

		<h1>Cliente: @clientName </h1>
	}
	<div class="border">
		<table class="table table-striped">
			<thead>
				<tr>
					<th>Id</th>
					<th>Tipo</th>
					<th>Número</th>
					<th>Responsável</th>
					<th>Cargo</th>
					<th>Ações</th>
				</tr>
			</thead>
			<tbody>
				@if (ClientContactView is not null)
				{
					if (clientContacts is not null)
					{
						@foreach (var clientContactDto in clientContacts)
						{
							<tr>
								<td>@clientContactDto.Id</td>
								<td>@clientContactDto.Type</td>
								@{
									string tel = clientContactDto.Number!
									.Replace("-", "")
									.Replace("(", "")
									.Replace(")", "")
									.Replace(" ", "");
									string tel1 = string.Empty;
									string apiTel = string.Empty;
									if (tel.Length == 10)
									{
										tel1 = decimal.Parse(tel).ToString("(##) ####-####");
									}
									else
									{
										tel1 = decimal.Parse(tel).ToString("(##) # ####-####");
										apiTel = $@"https://api.whatsapp.com/send?phone=55{tel}";
									}
								}
								<td><a href="@apiTel" target="_blank">@tel1</a></td>
								<td>@clientContactDto.ClientResponsibleDto!.Name</td>
								<td>@clientContactDto.ClientResponsibleDto!.Position</td>
								<td>
									<button @onclick="() => Editar(clientContactDto.Id)" class="btn btn-info">
										Editar
									</button>
									<button data-bs-toggle="modal" data-bs-target="#deleteClientContact-@clientContactDto.Id" class="btn btn-danger">
										Excluir
									</button>
									<DeleteClientContactModal UserContactId="clientContactDto.Id" DataUpdated="DataUpdate" />
								</td>
							</tr>
						}
					}
				}
			</tbody>
		</table>
		<button type="button" @onclick="Voltar" class="btn btn-info">Voltar</button>
	</div>
}

@code {

	[Parameter]
	public PagedResultView<ClientContactDto> ClientContactView { get; set; } = new();

	[Parameter]
	public int ClientId { get; set; }
	[Parameter]
	public EventCallback DataUpdated { get; set; }

	private string? errorMessage;

	protected async override Task OnInitializedAsync()
	{
		await DataUpdate();
	}
	private async Task DataUpdate()
	{
		var clientContact = await clientContactService.GetByClientId(1, 10, ClientId);
		if (clientContact.IsFailure)
		{
			errorMessage = clientContact.Error.Message;
			return;
		}

		if (clientContact.Value.Data.Count() == 0)
		{
			navigationManager.NavigateTo("/client");
		}

		ClientContactView = clientContact.Value;

	}
	private void Editar(int id)
	{
		if (ClientContactView is null)
			return;

		navigationManager.NavigateTo($"/client/contact/edit/{id}");
	}
	private void Voltar()
	{
		navigationManager.NavigateTo("/client");
	}
}