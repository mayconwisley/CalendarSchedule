@page "/client/create"

@inject IClientService clientService
@inject NavigationManager navigationManager
<h1>Cadastro de Cliente</h1>
<EditForm Model="@ClientDto" OnValidSubmit="Create">
	@if (!string.IsNullOrEmpty(errorMessage))
	{
		<MensageError Message="@errorMessage" />
	}
	<DataAnnotationsValidator />
	<div class="row g-3">
		<div class="col-12">
			<label for="inName" class="form-label">Nome</label>
			<InputText class="form-control" id="inName" @bind-Value="ClientDto!.Name" placeholder="Nome" />
			<ValidationMessage For="@(() => ClientDto.Name)" />
		</div>
		<div class="col-6">
			<label for="inTelephone" class="form-label">Telefone</label>
			<InputText type="tel" class="form-control" id="inTelephone" @bind-Value="ClientDto!.Telephone" placeholder="Telefone" />
			<ValidationMessage For="@(() => ClientDto.Telephone)" />
		</div>
		<div class="col-6">
			<label for="inState" class="form-label">Estado</label>
			<InputText type="text" class="form-control" id="inState" @bind-Value="ClientDto!.State" placeholder="Estado" />
			<ValidationMessage For="@(() => ClientDto.State)" />
		</div>
		<div class="col-6">
			<label for="inCity" class="form-label">Cidade</label>
			<InputText class="form-control" id="inCity" @bind-Value="ClientDto!.City" placeholder="Cidade" />
			<ValidationMessage For="@(() => ClientDto.City)" />
		</div>
		<div class="col-6">

			<label for="inGarden" class="form-label">Jardim</label>
			<InputText class="form-control" id="inGarden" @bind-Value="ClientDto!.Garden" placeholder="Jardim" />
			<ValidationMessage For="@(() => ClientDto.Garden)" />
		</div>
		<div class="col-9">
			<label for="inRoad" class="form-label">Rua</label>
			<InputText class="form-control" id="inRoad" @bind-Value="ClientDto!.Road" placeholder="Rua" />
			<ValidationMessage For="@(() => ClientDto.Road)" />
		</div>
		<div class="col-3">

			<label for="inNumber" class="form-label">Número</label>
			<InputText class="form-control" id="inNumber" @bind-Value="ClientDto!.Number" placeholder="Número" />
			<ValidationMessage For="@(() => ClientDto.Number)" />
		</div>
		<div class="col-12">
			<label for="inDescription" class="form-label">Descrição</label>
			<InputText class="form-control" id="inDescription" @bind-Value="ClientDto!.Description" placeholder="Descrição" />
		</div>
		<div class="col-6">
			<div class="form-check">
				<InputCheckbox class="form-check-input" id="inActive" @bind-Value="ClientDto!.Active" />
				<label for="inActive" class="form-label">Ativo</label>
			</div>
		</div>
		<div class="col-6">
			<div class="form-check">
				<InputCheckbox class="form-check-input" id="inProspection" @bind-Value="ClientDto!.Prospection" />
				<label for="inProspection" class="form-label">Prospecção</label>
			</div>
		</div>
	</div>
	<div class="mt-4 d-flex gap-2">
		<button type="submit" class="btn btn-primary" disabled="@isSubmitting">
			@((isSubmitting) ? "Salvando..." : "Salvar")
		</button>
		<button type="button" @onclick="Voltar" class="btn btn-info">Voltar</button>
	</div>
</EditForm>

@code {
	private ClientDto ClientDto { get; set; } = new();
	private string? errorMessage;
	private bool isSubmitting = false;

	private async Task Create()
	{
		isSubmitting = true;
		errorMessage = null;

		try
		{

			var client = await clientService.Create(ClientDto);
			if (client.IsFailure)
			{
				errorMessage = client.Error.Message;
				return;
			}
			navigationManager.NavigateTo("/client");
		}
		catch (Exception ex)
		{

			errorMessage = $"Erro inesperado ao salvar cliente: {ex.Message}";
		}
		finally
		{
			isSubmitting = false;
		}
	}
	private void Voltar()
	{
		navigationManager.NavigateTo("/client");
	}
}
