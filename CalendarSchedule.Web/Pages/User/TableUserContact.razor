@page "/user/details/{UserId:int}"

@using System.Globalization
@inject IUserContactService userContactService
@inject IUserService userService
@inject NavigationManager navigationManager

<h1>Consulta Contato - @UserDto.Id - @UserDto.Name </h1>
<div class="border">
	@if (isContact == false)
	{
		<MensageError Message="@messageError" />
	}
	else
	{
		<table class="table table-striped">
			<thead>
				<tr>
					<th>Id</th>
					<th>Tipo</th>
					<th>Número</th>
					<th>Ações</th>
				</tr>
			</thead>
			<tbody>
				@if (UserContactView is not null)
				{
					var userContacts = UserContactView.Data;

					if (userContacts is not null)
					{
						@foreach (var userContactDto in userContacts)
						{
							<tr>
								<td>@userContactDto.Id</td>
								<td>@userContactDto.Type</td>
								<td>@userContactDto.Number</td>
								<td>
									<button @onclick="() => Editar(userContactDto.Id)" class="btn btn-info">
										Editar
									</button>
									<button data-bs-toggle="modal" data-bs-target="#deleteUserContact-@userContactDto.Id" class="btn btn-danger">
										Excluir
									</button>
									<DeleteUserContactModal UserContactId="@userContactDto.Id" DataUpdated="@(() => DataUpdate())" />
								</td>
							</tr>
						}
					}
				}
			</tbody>
		</table>
	}
	<button class="btn btn-info" @onclick="Voltar">
		Voltar
	</button>
</div>

@code {

	[Parameter]
	public Action? DataUpdated { get; set; }

	[Parameter]
	public PagedResultView<UserContactDto> UserContactView { get; set; } = new();

	[Parameter]
	public int UserId { get; set; }

	private UserDto UserDto { get; set; } = new();
	private bool isContact = true;
	private string? messageError;

	protected async override Task OnInitializedAsync()
	{
		await DataUpdate();
	}
	private void Voltar()
	{
		navigationManager.NavigateTo("/user");
	}
	private void Editar(int id)
	{
		navigationManager.NavigateTo($"/user/contact/edit/{id}");
	}
	private async Task DataUpdate()
	{
		var userContact = await userContactService.GetByUserId(1, 10, UserId);
		if (userContact.IsSuccess)
		{
			UserContactView = userContact.Value;
		}
		else
		{
			messageError = userContact.Error.Message;
			isContact = false;
		}

		var user = await userService.GetById(UserId);
		if (user.IsSuccess)
		{
			UserDto = user.Value;
		}
	}
}