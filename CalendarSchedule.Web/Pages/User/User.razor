@page "/user"
@layout NewLayout
@inject ITokenStorageService tokenStorageService
@inject IUserStorageService userStorageService
@inject IUserService userService
@inject NavigationManager navigationManager

<h3>Cadastro de Colaborador</h3>
<button class="btn btn-info" @onclick="NovoColaborador">
	Novo Colaborador
</button>

@if (userView is null)
{
	<div class="spinner-border" role="status">
		<span class="visually-hidden">Loading...</span>
	</div>
}
else
{
	<TableUser DataUpdated="DataUpdated" UserView="@userView" />

	<PaginationTable PageCurrent="@ReceberPagina"
					 TotalData="@userView.TotalData"
					 Page="@userView.Page"
					 TotalPage="@userView.TotalPage" />
}

@code {
	private PagedResultView<UserDto>? userView;
	private LoginDto? LoginDto { get; set; } = new();

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			var token = await tokenStorageService.GetToken(LoginDto!);
			if (token.IsFailure)
			{
				await tokenStorageService.RemoverToken();
				navigationManager.NavigateTo("/Login");
			}
			var user = await userStorageService.GetUserSession();
			if (user.Value.Manager == false)
				navigationManager.NavigateTo("/");

			if (token.IsSuccess)
				await DataUpdated();
		}
	}

	private void NovoColaborador()
	{
		navigationManager.NavigateTo("/user/create");
	}
	private async Task DataUpdated()
	{
		var user = await userService.GetAll();
		if (user.IsSuccess)
			userView = user.Value;
		StateHasChanged();
	}
	private async Task ReceberPagina(int pageCurrent)
	{
		var user = await userService.GetAll(pageCurrent);
		userView = user.Value;
	}
}