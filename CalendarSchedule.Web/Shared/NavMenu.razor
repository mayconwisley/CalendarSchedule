@inject IUserStorageService userStorageService
<div>
    <ul class="nav nav-tabs nav justify-content-center">
        <li class="nav-item">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">Calendário</NavLink>
        </li>

        @{

            if (UserSessionDto is not null)
            {
                if (UserSessionDto.Manager == true)
                {
                    <li class="nav-item">
                        <NavLink class="nav-link" href="user" Match="NavLinkMatch.Prefix">Colaborador</NavLink>
                    </li>
                }
            }
        }

        <li class="nav-item">
            <NavLink class="nav-link" href="client" Match="NavLinkMatch.All">Cliente</NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="client/responsible" Match="NavLinkMatch.All">Responsável Cliente</NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="schedule" Match="NavLinkMatch.All">Agenda Colaborador</NavLink>
        </li>
    </ul>
</div>
@code {

    private bool collapseNavMenu = true;
    private UserSessionDto? UserSessionDto;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var userSession = await userStorageService.GetUserSession();
            UserSessionDto = userSession.Value;
        }
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
