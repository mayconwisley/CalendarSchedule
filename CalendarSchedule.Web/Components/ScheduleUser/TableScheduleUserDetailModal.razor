@inject IScheduleUserService scheduleUserService
@rendermode InteractiveServer

@if (scheduleUserDto.ScheduleDto is not null)
{
	<div class="modal fade" id="tableScheduleUserDatail-@ScheduleId-@UserId" tabindex="-1" aria-labelledby="tableScheduleLabel" aria-hidden="true">
		<div class="modal-dialog modal-xl">
			<div class="modal-content">
				<div class="modal-header">
					<h1 class="modal-title fs-5" id="tableScheduleLabel">Detalhes da Agenda</h1>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<div class="border">
						@if (scheduleUserDto.ScheduleDto.Particular)
						{
							<table class="table table-striped">
								<thead>
									<tr>
										<th>Agenda Id</th>
										<th>Colaborador Id</th>
										<th>Particular</th>
									</tr>
								</thead>
								<tbody>
									@if (scheduleUserDto is not null)
									{
										<tr>
											<td>@scheduleUserDto.ScheduleId</td>
											<td>@scheduleUserDto.UserId</td>
											<td>@(scheduleUserDto.ScheduleDto.Particular ? "Sim" : "Não")</td>
										</tr>
									}
								</tbody>
							</table>
						}
						else
						{
							<table class="table table-striped">
								<thead>
									<tr>
										<th>Agenda Id</th>
										<th>Colaborador Id</th>
										<th>Remoto</th>
										<th>Reservada</th>
										<th>Particular</th>
										<th>Prospecção</th>
										<th>Cidade</th>
									</tr>
								</thead>
								<tbody>
									@if (scheduleUserDto is not null)
									{
										<tr>
											<td>@scheduleUserDto.ScheduleId</td>
											<td>@scheduleUserDto.UserId</td>
											<td>@(scheduleUserDto.ScheduleDto.MeetingType ? "Sim" : "Não")</td>
											<td>@(scheduleUserDto.ScheduleDto.StatusSchedule ? "Sim" : "Não")</td>
											<td>@(scheduleUserDto.ScheduleDto.Particular ? "Sim" : "Não")</td>
											<td>@(scheduleUserDto.ScheduleDto.ClientDto!.Prospection ? "Sim" : "Não")</td>
											<td>@(scheduleUserDto.ScheduleDto.ClientDto == null ? "" : scheduleUserDto.ScheduleDto.ClientDto.City)</td>
										</tr>
									}
								</tbody>
							</table>
						}
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
				</div>
			</div>
		</div>
	</div>
}
@code {
	private ScheduleUserDto? scheduleUserDto = new();

	[Parameter]
	public int ScheduleId { get; set; }
	[Parameter]
	public int UserId { get; set; }

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			var scheduleUser = await scheduleUserService.GetById(ScheduleId, UserId);
			scheduleUserDto = scheduleUser.Value;
			StateHasChanged();
		}
	}
}