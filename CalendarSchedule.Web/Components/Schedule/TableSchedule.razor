<div class="border mt-2">
    <table class="table table-striped align-middle">
        <thead>
            <tr>
                <th>Colaborador</th>
                <th>Cliente</th>
                <th>Data/Hora Inicio</th>
                <th>Data/Hora Fim</th>
                <th>Descrição</th>
                <th class="text-center">Ações</th>
            </tr>
        </thead>
        <tbody>
            @if (ScheduleUserView is not null)
            {
                if (ScheduleUserView.Data is not null)
                {
                    @foreach (var schedule in ScheduleUserView.Data)
                    {
                        <tr>
                            <td>@schedule.UserDto!.Name</td>
                            <td>@(schedule.ScheduleDto!.ClientDto == null ? "" : schedule.ScheduleDto.ClientDto.Name)</td>
                            <td>@schedule.ScheduleDto.DateStart.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>@schedule.ScheduleDto.DateFinal.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>@schedule.ScheduleDto.Description</td>
                            <td>
                                <button data-bs-toggle="modal" data-bs-target="#tableScheduleUserDatail-@schedule.ScheduleId-@schedule.UserId" class="btn btn-info">
                                    Detalhe
                                </button>
                                <TableScheduleUserDetailModal ScheduleId="@schedule.ScheduleId" UserId="@schedule.UserId" />

                                <button data-bs-toggle="modal" data-bs-target="#deleteScheduleUser-@schedule.ScheduleId-@schedule.UserId" class="btn btn-danger">
                                    Excluir
                                </button>
                                <DeleteScheduleUserModal ScheduleId="@schedule.ScheduleId" UserId="@schedule.UserId" DataUpdated="@(() => UpdateData())" />
                            </td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
</div>

@code {

    [Parameter]
    public PagedResultView<ScheduleUserDto>? ScheduleUserView { get; set; }

    [Parameter]
    public EventCallback DataUpdated { get; set; }
   
    private async void UpdateData()
    {
        await DataUpdated.InvokeAsync(null);
    }
}